<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>io.github.bitbrain</groupId>
      <artifactId>braingdx-demo</artifactId>
      <version>1.0.0-SNAPSHOT</version>
   </parent>

   <artifactId>demo-desktop</artifactId>
   <packaging>jar</packaging>
   <name>BrainGDX Demo Desktop</name>

   <properties>
      <mainClass>de.bitbrain.braingdx.java.BrainGdxAppDesktop</mainClass>
   </properties>

   <dependencies>
      <dependency>
         <groupId>io.github.bitbrain</groupId>
         <artifactId>demo-core</artifactId>
         <version>${project.version}</version>
      </dependency>

      <dependency>
         <groupId>io.github.bitbrain</groupId>
         <artifactId>braingdx-core</artifactId>
      </dependency>

      <dependency>
         <groupId>com.badlogicgames.gdx</groupId>
         <artifactId>gdx</artifactId>
      </dependency>

      <dependency>
         <groupId>com.badlogicgames.gdx</groupId>
         <artifactId>gdx-backend-lwjgl</artifactId>
      </dependency>

      <dependency>
         <groupId>com.badlogicgames.gdx</groupId>
         <artifactId>gdx-platform</artifactId>
         <classifier>natives-desktop</classifier>
      </dependency>

      <dependency>
         <groupId>com.badlogicgames.gdx</groupId>
         <artifactId>gdx-box2d-platform</artifactId>
         <classifier>natives-desktop</classifier>
         <scope>compile</scope>
      </dependency>

      <dependency>
         <groupId>org.reflections</groupId>
         <artifactId>reflections</artifactId>
         <version>0.9.10</version>
      </dependency>

   </dependencies>

   <build>
      <resources>
         <resource>
            <directory>../assets</directory>
         </resource>
      </resources>

      <plugins>
         <!-- this run the game when you invoke: mvn integration-test -Pdesktop -->
         <plugin>
            <groupId>com.googlecode.mavennatives</groupId>
            <artifactId>maven-nativedependencies-plugin</artifactId>
            <version>0.0.6</version>
            <executions>
               <execution>
                  <id>unpacknatives</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                     <goal>copy</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
               <execution>
                  <phase>integration-test</phase>
                  <configuration>
                     <target>
                        <java fork="true" classname="${mainClass}" classpathref="maven.test.classpath">
                           <sysproperty key="java.library.path" value="target/natives"/>
                        </java>
                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <!-- this builds a totally standalone jar file when you invoke: mvn package
             -Pdesktop -->
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.4</version>
            <configuration>
               <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
               </descriptorRefs>
               <archive>
                  <manifest>
                     <mainClass>${mainClass}</mainClass>
                  </manifest>
               </archive>
            </configuration>
            <executions>
               <execution>
                  <id>make-assembly</id>
                  <phase>package</phase>
                  <goals>
                     <goal>single</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
</project>
